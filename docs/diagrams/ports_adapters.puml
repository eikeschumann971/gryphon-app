@startuml
title Ports & Adapters (hexagonal) - gryphon-app
left to right direction
skinparam componentStyle rectangle

package "Application" {
  [PathPlanningService] <<component>>
  [LogicalAgentService] <<component>>
}

package "Domain (Ports)" {
  interface "GraphStoreAsync" as GraphStorePort
  interface "PathPlanningDataSource" as DataSourcePort
  interface "EventStore" as EventStorePort
}

package "Outbound Adapters" {
  component "FilesystemDataSource" as FS <<adapter>>
  component "PostgresGraphStore" as PG <<adapter>>
  component "KafkaAdapter" as KAFKA <<adapter>>
}

package "Infrastructure" {
  database "Postgres" as DB
  [Kafka Cluster]
  folder "resources/path_planning" as ASSETS
}

PathPlanningService ..> GraphStorePort : depends on
PathPlanningService ..> DataSourcePort : depends on
PathPlanningService ..> EventStorePort : emits events to

FS ..|> DataSourcePort
PG ..|> GraphStorePort
KAFKA ..|> EventStorePort

PG --> DB : stores graph bytes
FS --> ASSETS : reads/writes graphs
KAFKA --> [Kafka Cluster]

note right of PathPlanningService
  - Implements orchestration of path planning
  - Uses command actors / aggregates
end note

@enduml
